import {
    include "assests/framed_items"
    
    settings {
        colored_item: wool
    }
}

menu {
    title  {
        value = [
            D
            <rainbow>Dy
            <rainbow>Dyn
            <rainbow>Dyna
            <rainbow>Dynam
            <rainbow>Dynami
            <rainbow>Dynamic
            <rainbow>Dynamics 
            <rainbow>Dynamics E
            <rainbow>Dynamics Ex
            <rainbow>Dynamics Exa
            <rainbow>Dynamics Exam
            <rainbow>Dynamics Examp
            <rainbow>Dynamics Exampl
            <rainbow>Dynamics Example
        ]
        period = 1
        mode = reversable
    }
    rows = 3
    // none-virtual GUI is tested to be more stable with low-frequ animated titles
    virtual: false
}

panels {
    layout = [
        -
        --A-B-C--
        -
    ]
    icons {
        "A" {
            update: 20
            texture: diamond
            name: "<green><bold>DYNAMIC ITEM [动态属性]"
            lore: [
                -
                每个图标帧都支持配置独立的描述更新周期
                每个周期，图标物品属性所包含的变量都将被自动翻译
                并呈现
                -
                "例如: <gradient>{{date as \"HH:mm:ss, yyyy-MM-dd\"}}"
                -
                <blue>该功能通过配置 UPDATE 节点实现
            ]
        }
        "B" {
            texture: chest
            name: "<yellow><bold>DYNAMIC TITLES [动画标题]"
            lore: [
                -
                你可以为菜单配置支持自动动画的标题
                通过 Kether 动作，你也可以单独修改菜单标题
                亦或是暂停、恢复自动动画的周期任务
                -
                对于 Unicode 字符贴图的容器 UI，
                通过动态标题也可创造更为惊艳的动画 GUI
                -
                <blue>你正在查看的菜单即有动态标题属性
            ]
        }
        "C" {
            frames-prop {
                delay: 5
                mode: reversable
            }
            frames: ${import.frames_of_color}
            name: "<rainbow><bold>DYNAMIC FRAMES [动态物品帧]</bold></rainbow>"
            lore: [
                -
                物品帧（Frames）节点可以让你轻松配置强大、有规律的动画
                可自动继承物品属性，让你只写需要动画的特定属性
                -
                <blue>点击查看利用物品帧创建的一个 GUI 案例
            ]
            action = menu open Dynamics_Framed
        }
    }
}